{"ast":null,"code":"var _jsxFileName = \"/home/n3op2/node/sdrf_client/src/App.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport axios from 'axios';\n\nconst Heatmap = () => {\n  useEffect(() => {\n    const url = 'http://localhost:3010';\n    axios.get(url).then(res => {\n      console.log('fetching data...'); // TODO have a separate table for data values such as\n      // hzLow, hzHigh and link it with freqs id\n\n      if (res.data) {\n        // TODO tidy up\n        const data = res.data;\n        const baseHz = res.data[0].hzLow;\n        const topHz = res.data[0].hzHigh;\n        const baseTemperature = res.data[0].hzLow;\n        const timeRange = d3.extent(data, d => d.createdAt);\n        const step = (topHz - baseHz) / res.data[0].freqs.length;\n        let hz = baseHz;\n        const mappedData = data.map((el, i) => {\n          console.log('started');\n          hz = baseHz;\n          return el.freqs.map(db => {\n            const tmp = {};\n            tmp.db = db;\n            tmp.hz = hz;\n            hz = Math.round(hz + step);\n            return tmp;\n          });\n        });\n        console.log('mapped data: ', mappedData);\n        const hzRange = d3.extent(mappedData, d => {\n          console.log('d: ', d[0]);\n          return d[0].hz;\n        });\n        console.log('range: ', hzRange);\n        const legendData = [{\n          'interval': -127,\n          'color': 'purple'\n        }, {\n          'interval': -65,\n          'color': 'darkorchid'\n        }, {\n          'interval': 0,\n          'color': 'mediumpurple'\n        }, {\n          'interval': 65,\n          'color': 'lightskyblue'\n        }, {\n          'interval': 127,\n          'color': 'khaki'\n        }];\n        const width = 917,\n              height = 408,\n              margins = {\n          top: 20,\n          right: 50,\n          bottom: 100,\n          left: 100\n        };\n        const yScale = d3.scaleLinear().range([height, 0]).domain([12, 0]);\n        const xScale = d3.scaleLinear().range([0, width]).domain(d3.extent(data, d => {\n          return d.createdAt;\n        })); //Setting chart width and adjusting for margins\n\n        const chart = d3.select('.chart').attr('width', width + margins.right + margins.left).attr('height', height + margins.top + margins.bottom).append('g').attr('transform', 'translate(' + margins.left + ',' + margins.top + ')');\n        const tooltip = d3.select('.container').append('div').attr('class', 'tooltip').html('Tooltip');\n        const barWidth = width / (hzRange[1] - hzRange[0]),\n              barHeight = height / 12; //Return dynamic color based on intervals in legendData\n\n        const colorScale = d => {\n          for (let i = 0; i < legendData.length; i++) {\n            if (d.db + baseTemperature < legendData[i].interval) {\n              return legendData[i].color;\n            }\n          }\n\n          return 'darkred';\n        }; //Return abbreviate month string from month decimal\n\n\n        const timeParseFormat = d => {\n          if (d === 0) return '';\n          return d3.timeFormat('%b')(d3.timeParse('%m')(d));\n        }; //Append heatmap bars, styles, and mouse events\n\n\n        chart.selectAll('g').data(data).enter().append('g').append('rect').attr('x', d => {\n          return (d.freq - timeRange[0]) * barWidth;\n        }).attr('y', d => {\n          return (d.createdAt - 1) * barHeight;\n        }).style('fill', colorScale).attr('width', barWidth).attr('height', barHeight).on('mouseover', d => {\n          tooltip.html(timeParseFormat(d.month) + ' ' + d.year + '<br/>' + d3.format('.4r')(baseTemperature + d.variance) + ' &degC<br/>' + d.variance + ' &degC').style('left', d3.event.pageX - 35 + 'px').style('top', d3.event.pageY - 73 + 'px').style('opacity', .9);\n        }).on('mouseout', () => {\n          tooltip.style('opacity', 0).style('left', '0px');\n        }); //Append x axis\n\n        chart.append('g').attr('transform', 'translate(0,' + height + ')').call(d3.axisBottom(xScale).tickFormat(d3.format('.4'))); //Append y axis\n\n        chart.append('g').attr('transform', 'translate(0,-' + barHeight / 2 + ')').call(d3.axisLeft(yScale).tickFormat(timeParseFormat)).attr('class', 'yAxis'); //Append y axis label\n\n        chart.append('text').attr('transform', 'translate(-40,' + height / 2 + ') rotate(-90)').style('text-anchor', 'middle').text('Month'); //Append x axis label\n\n        chart.append('text').attr('transform', 'translate(' + width / 2 + ',' + (height + 40) + ')').style('text-anchor', 'middle').text('Year'); //Append color legend using legendData\n\n        chart.append('g').selectAll('g').data(legendData).enter().append('rect').attr('width', 30).attr('height', 20).attr('x', (d, i) => {\n          return i * 30 + width * .7;\n        }).attr('y', height + margins.top).style('fill', d => {\n          return d.color;\n        }); //Append text labels for legend from legendData\n\n        chart.append('g').selectAll('text').data(legendData).enter().append('text').attr('x', (d, i) => {\n          return i * 30 + width * .7;\n        }).attr('y', height + margins.top * 3).text(d => {\n          return d.interval;\n        });\n      } else {\n        console.log('empty response');\n      }\n    });\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Heatmap\"));\n};\n\nconst App = () => {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(Heatmap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/n3op2/node/sdrf_client/src/App.js"],"names":["React","Fragment","useEffect","d3","axios","Heatmap","url","get","then","res","console","log","data","baseHz","hzLow","topHz","hzHigh","baseTemperature","timeRange","extent","d","createdAt","step","freqs","length","hz","mappedData","map","el","i","db","tmp","Math","round","hzRange","legendData","width","height","margins","top","right","bottom","left","yScale","scaleLinear","range","domain","xScale","chart","select","attr","append","tooltip","html","barWidth","barHeight","colorScale","interval","color","timeParseFormat","timeFormat","timeParse","selectAll","enter","freq","style","on","month","year","format","variance","event","pageX","pageY","call","axisBottom","tickFormat","axisLeft","text","App"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport axios from 'axios';\n\nconst Heatmap = () => {\n  useEffect(() => {\n    const url = 'http://localhost:3010';\n    axios.get(url).then(res => {\n      console.log('fetching data...');\n      // TODO have a separate table for data values such as\n      // hzLow, hzHigh and link it with freqs id\n      if (res.data) {\n        // TODO tidy up\n        const data = res.data;\n        const baseHz = res.data[0].hzLow;\n        const topHz = res.data[0].hzHigh;\n        const baseTemperature = res.data[0].hzLow;\n        const timeRange = d3.extent(data, d => d.createdAt);\n        const step = (topHz - baseHz) / res.data[0].freqs.length;\n        let hz = baseHz;\n\n        const mappedData = data.map((el, i) => {\n            console.log('started');\n            hz = baseHz;\n            return el.freqs.map((db) => {\n              const tmp = {};\n              tmp.db = db;\n              tmp.hz = hz;\n              hz = Math.round(hz + step);\n              return tmp;\n            });\n        });\n        console.log('mapped data: ', mappedData);\n\n        const hzRange = d3.extent(mappedData, d => { \n          console.log('d: ', d[0]);\n          return d[0].hz;\n        });\n\n        console.log('range: ', hzRange);\n\n        const legendData = [\n          {'interval': -127, 'color': 'purple'},\n          {'interval': -65, 'color': 'darkorchid'},\n          {'interval': 0, 'color': 'mediumpurple'},\n          {'interval': 65, 'color': 'lightskyblue'},\n          {'interval': 127, 'color': 'khaki'}\n        ];\n        \n        const width = 917,\n              height = 408,\n              margins = {top:20, right: 50, bottom: 100, left: 100};\n        \n        const yScale = d3.scaleLinear()\n          .range([height,0])\n          .domain([12,0]);\n        \n        const xScale = d3.scaleLinear()\n          .range([0,width])\n          .domain(d3.extent(data, d => {return d.createdAt; }));\n        \n        //Setting chart width and adjusting for margins\n        const chart = d3.select('.chart')\n          .attr('width', width + margins.right + margins.left)\n          .attr('height', height + margins.top + margins.bottom)\n          .append('g')\n          .attr('transform','translate(' + margins.left + ',' + margins.top + ')');\n        \n        const tooltip = d3.select('.container').append('div')\n          .attr('class','tooltip')\n          .html('Tooltip')\n        \n        const barWidth = width / (hzRange[1] - hzRange[0]),\n              barHeight = height / 12;\n        \n        //Return dynamic color based on intervals in legendData\n        const colorScale = d => {\n          for (let i = 0; i < legendData.length; i++) {\n            if (d.db + baseTemperature < legendData[i].interval) {\n              return legendData[i].color;\n            }\n          }\n          return 'darkred';\n        };\n        \n        //Return abbreviate month string from month decimal\n        const timeParseFormat = d => {\n          if (d === 0) return '';\n          return d3.timeFormat('%b')(d3.timeParse('%m')(d));\n        };\n        \n        //Append heatmap bars, styles, and mouse events\n        chart.selectAll('g')\n          .data(data).enter().append('g')\n          .append('rect')\n          .attr('x', d => {return (d.freq - timeRange[0]) * barWidth})\n          .attr('y', d => {return (d.createdAt - 1) * barHeight})\n          .style('fill', colorScale)\n          .attr('width', barWidth)\n          .attr('height', barHeight)\n          .on('mouseover', d => {\n            tooltip.html(timeParseFormat(d.month) + ' ' + d.year + '<br/>' +\n              d3.format('.4r')(baseTemperature + d.variance) + ' &degC<br/>' + d.variance + ' &degC' )\n              .style('left', d3.event.pageX - 35 + 'px')\n              .style('top', d3.event.pageY - 73 + 'px')\n              .style('opacity', .9);\n          }).on('mouseout', () => {\n            tooltip.style('opacity', 0)\n              .style('left', '0px');\n          });\n        \n        //Append x axis\n        chart.append('g')\n          .attr('transform','translate(0,' + height + ')')\n          .call(d3.axisBottom(xScale).tickFormat(d3.format('.4')));\n        \n        //Append y axis\n        chart.append('g')\n          .attr('transform','translate(0,-' + barHeight / 2 + ')')\n          .call(d3.axisLeft(yScale).tickFormat(timeParseFormat))\n          .attr('class','yAxis');\n        \n        //Append y axis label\n        chart.append('text')\n          .attr('transform','translate(-40,' + (height / 2)  + ') rotate(-90)')\n          .style('text-anchor','middle')\n          .text('Month');\n        \n        //Append x axis label\n        chart.append('text')\n          .attr('transform','translate(' + (width / 2) + ',' + (height + 40) + ')')\n          .style('text-anchor','middle')\n          .text('Year');\n        \n        //Append color legend using legendData\n        chart.append('g')\n          .selectAll('g')\n          .data(legendData).enter()\n          .append('rect')\n          .attr('width', 30)\n          .attr('height', 20)\n          .attr('x', (d, i) => { return i * 30 + width * .7;})\n          .attr('y', height + margins.top)\n          .style('fill', d => {return d.color; });\n        \n        //Append text labels for legend from legendData\n        chart.append('g')\n          .selectAll('text')\n          .data(legendData).enter().append('text')\n          .attr('x', (d,i) => {return i * 30 + width * .7})\n          .attr('y', height + margins.top * 3)\n          .text(d => {return d.interval; });\n        \n      } else {\n        console.log('empty response');\n      }\n    });\n\n  }, []);\n\n  return (\n    <Fragment>\n      <h1>Heatmap</h1>\n    </Fragment>\n  );\n};\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Heatmap />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}