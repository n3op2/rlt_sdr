{"ast":null,"code":"var _jsxFileName = \"/home/n3op2/node/sdrf_client/src/App.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport axios from 'axios';\n\nconst Heatmap = () => {\n  useEffect(() => {\n    const url = 'http://localhost:3010';\n    axios.get(url).then(res => {\n      const data = res.data,\n            baseTemperature = 153384000,\n            timeRange = d3.extent(data, d => d.createdAt),\n            step = res.data.step;\n      const mappedData = data.map(fq => {});\n      const legendData = [{\n        'interval': -127,\n        'color': 'purple'\n      }, {\n        'interval': -65,\n        'color': 'darkorchid'\n      }, {\n        'interval': 0,\n        'color': 'mediumpurple'\n      }, {\n        'interval': 65,\n        'color': 'lightskyblue'\n      }, {\n        'interval': 127,\n        'color': 'khaki'\n      }];\n      const width = 917,\n            height = 408,\n            margins = {\n        top: 20,\n        right: 50,\n        bottom: 100,\n        left: 100\n      };\n      const yScale = d3.scaleLinear().range([height, 0]).domain([12, 0]);\n      const xScale = d3.scaleLinear().range([0, width]).domain(d3.extent(data, d => {\n        return d.createdAt;\n      })); //Setting chart width and adjusting for margins\n\n      const chart = d3.select('.chart').attr('width', width + margins.right + margins.left).attr('height', height + margins.top + margins.bottom).append('g').attr('transform', 'translate(' + margins.left + ',' + margins.top + ')');\n      const tooltip = d3.select('.container').append('div').attr('class', 'tooltip').html('Tooltip');\n      const barWidth = width / (yearRange[1] - yearRange[0]),\n            barHeight = height / 12; //Return dynamic color based on intervals in legendData\n\n      const colorScale = d => {\n        for (let i = 0; i < legendData.length; i++) {\n          if (d.db + baseTemperature < legendData[i].interval) {\n            return legendData[i].color;\n          }\n        }\n\n        return 'darkred';\n      }; //Return abbreviate month string from month decimal\n\n\n      const timeParseFormat = d => {\n        if (d === 0) return '';\n        return d3.timeFormat('%b')(d3.timeParse('%m')(d));\n      }; //Append heatmap bars, styles, and mouse events\n\n\n      chart.selectAll('g').data(data).enter().append('g').append('rect').attr('x', d => {\n        return (d.freq - timeRange[0]) * barWidth;\n      }).attr('y', d => {\n        return (d.createdAt - 1) * barHeight;\n      }).style('fill', colorScale).attr('width', barWidth).attr('height', barHeight).on('mouseover', d => {\n        tooltip.html(timeParseFormat(d.month) + ' ' + d.year + '<br/>' + d3.format('.4r')(baseTemperature + d.variance) + ' &degC<br/>' + d.variance + ' &degC').style('left', d3.event.pageX - 35 + 'px').style('top', d3.event.pageY - 73 + 'px').style('opacity', .9);\n      }).on('mouseout', () => {\n        tooltip.style('opacity', 0).style('left', '0px');\n      }); //Append x axis\n\n      chart.append('g').attr('transform', 'translate(0,' + height + ')').call(d3.axisBottom(xScale).tickFormat(d3.format('.4'))); //Append y axis\n\n      chart.append('g').attr('transform', 'translate(0,-' + barHeight / 2 + ')').call(d3.axisLeft(yScale).tickFormat(timeParseFormat)).attr('class', 'yAxis'); //Append y axis label\n\n      chart.append('text').attr('transform', 'translate(-40,' + height / 2 + ') rotate(-90)').style('text-anchor', 'middle').text('Month'); //Append x axis label\n\n      chart.append('text').attr('transform', 'translate(' + width / 2 + ',' + (height + 40) + ')').style('text-anchor', 'middle').text('Year'); //Append color legend using legendData\n\n      chart.append('g').selectAll('g').data(legendData).enter().append('rect').attr('width', 30).attr('height', 20).attr('x', (d, i) => {\n        return i * 30 + width * .7;\n      }).attr('y', height + margins.top).style('fill', d => {\n        return d.color;\n      }); //Append text labels for legend from legendData\n\n      chart.append('g').selectAll('text').data(legendData).enter().append('text').attr('x', (d, i) => {\n        return i * 30 + width * .7;\n      }).attr('y', height + margins.top * 3).text(d => {\n        return d.interval;\n      });\n    });\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Heatmap\"));\n};\n\nconst App = () => {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Heatmap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/n3op2/node/sdrf_client/src/App.js"],"names":["React","Fragment","useEffect","d3","axios","Heatmap","url","get","then","res","data","baseTemperature","timeRange","extent","d","createdAt","step","mappedData","map","fq","legendData","width","height","margins","top","right","bottom","left","yScale","scaleLinear","range","domain","xScale","chart","select","attr","append","tooltip","html","barWidth","yearRange","barHeight","colorScale","i","length","db","interval","color","timeParseFormat","timeFormat","timeParse","selectAll","enter","freq","style","on","month","year","format","variance","event","pageX","pageY","call","axisBottom","tickFormat","axisLeft","text","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAEpBH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,GAAG,GAAG,uBAAZ;AACAF,IAAAA,KAAK,CAACG,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBC,GAAG,IAAI;AACzB,YAAMC,IAAI,GAAGD,GAAG,CAACC,IAAjB;AAAA,YACMC,eAAe,GAAG,SADxB;AAAA,YAEMC,SAAS,GAAGT,EAAE,CAACU,MAAH,CAAUH,IAAV,EAAgBI,CAAC,IAAIA,CAAC,CAACC,SAAvB,CAFlB;AAAA,YAGMC,IAAI,GAAGP,GAAG,CAACC,IAAJ,CAASM,IAHtB;AAKA,YAAMC,UAAU,GAAGP,IAAI,CAACQ,GAAL,CAAUC,EAAD,IAAQ,CAEnC,CAFkB,CAAnB;AAIA,YAAMC,UAAU,GAAG,CACjB;AAAC,oBAAY,CAAC,GAAd;AAAmB,iBAAS;AAA5B,OADiB,EAEjB;AAAC,oBAAY,CAAC,EAAd;AAAkB,iBAAS;AAA3B,OAFiB,EAGjB;AAAC,oBAAY,CAAb;AAAgB,iBAAS;AAAzB,OAHiB,EAIjB;AAAC,oBAAY,EAAb;AAAiB,iBAAS;AAA1B,OAJiB,EAKjB;AAAC,oBAAY,GAAb;AAAkB,iBAAS;AAA3B,OALiB,CAAnB;AAQA,YAAMC,KAAK,GAAG,GAAd;AAAA,YACMC,MAAM,GAAG,GADf;AAAA,YAEMC,OAAO,GAAG;AAACC,QAAAA,GAAG,EAAC,EAAL;AAASC,QAAAA,KAAK,EAAE,EAAhB;AAAoBC,QAAAA,MAAM,EAAE,GAA5B;AAAiCC,QAAAA,IAAI,EAAE;AAAvC,OAFhB;AAIA,YAAMC,MAAM,GAAGzB,EAAE,CAAC0B,WAAH,GACZC,KADY,CACN,CAACR,MAAD,EAAQ,CAAR,CADM,EAEZS,MAFY,CAEL,CAAC,EAAD,EAAI,CAAJ,CAFK,CAAf;AAIA,YAAMC,MAAM,GAAG7B,EAAE,CAAC0B,WAAH,GACZC,KADY,CACN,CAAC,CAAD,EAAGT,KAAH,CADM,EAEZU,MAFY,CAEL5B,EAAE,CAACU,MAAH,CAAUH,IAAV,EAAgBI,CAAC,IAAI;AAAC,eAAOA,CAAC,CAACC,SAAT;AAAqB,OAA3C,CAFK,CAAf,CA1ByB,CA8BzB;;AACA,YAAMkB,KAAK,GAAG9B,EAAE,CAAC+B,MAAH,CAAU,QAAV,EACXC,IADW,CACN,OADM,EACGd,KAAK,GAAGE,OAAO,CAACE,KAAhB,GAAwBF,OAAO,CAACI,IADnC,EAEXQ,IAFW,CAEN,QAFM,EAEIb,MAAM,GAAGC,OAAO,CAACC,GAAjB,GAAuBD,OAAO,CAACG,MAFnC,EAGXU,MAHW,CAGJ,GAHI,EAIXD,IAJW,CAIN,WAJM,EAIM,eAAeZ,OAAO,CAACI,IAAvB,GAA8B,GAA9B,GAAoCJ,OAAO,CAACC,GAA5C,GAAkD,GAJxD,CAAd;AAMA,YAAMa,OAAO,GAAGlC,EAAE,CAAC+B,MAAH,CAAU,YAAV,EAAwBE,MAAxB,CAA+B,KAA/B,EACbD,IADa,CACR,OADQ,EACA,SADA,EAEbG,IAFa,CAER,SAFQ,CAAhB;AAIA,YAAMC,QAAQ,GAAGlB,KAAK,IAAImB,SAAS,CAAC,CAAD,CAAT,GAAeA,SAAS,CAAC,CAAD,CAA5B,CAAtB;AAAA,YACMC,SAAS,GAAGnB,MAAM,GAAG,EAD3B,CAzCyB,CA4CzB;;AACA,YAAMoB,UAAU,GAAG5B,CAAC,IAAI;AACtB,aAAK,IAAI6B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvB,UAAU,CAACwB,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,cAAI7B,CAAC,CAAC+B,EAAF,GAAOlC,eAAP,GAAyBS,UAAU,CAACuB,CAAD,CAAV,CAAcG,QAA3C,EAAqD;AACnD,mBAAO1B,UAAU,CAACuB,CAAD,CAAV,CAAcI,KAArB;AACD;AACF;;AACD,eAAO,SAAP;AACD,OAPD,CA7CyB,CAsDzB;;;AACA,YAAMC,eAAe,GAAGlC,CAAC,IAAI;AAC3B,YAAIA,CAAC,KAAK,CAAV,EAAa,OAAO,EAAP;AACb,eAAOX,EAAE,CAAC8C,UAAH,CAAc,IAAd,EAAoB9C,EAAE,CAAC+C,SAAH,CAAa,IAAb,EAAmBpC,CAAnB,CAApB,CAAP;AACD,OAHD,CAvDyB,CA4DzB;;;AACAmB,MAAAA,KAAK,CAACkB,SAAN,CAAgB,GAAhB,EACGzC,IADH,CACQA,IADR,EACc0C,KADd,GACsBhB,MADtB,CAC6B,GAD7B,EAEGA,MAFH,CAEU,MAFV,EAGGD,IAHH,CAGQ,GAHR,EAGarB,CAAC,IAAI;AAAC,eAAO,CAACA,CAAC,CAACuC,IAAF,GAASzC,SAAS,CAAC,CAAD,CAAnB,IAA0B2B,QAAjC;AAA0C,OAH7D,EAIGJ,IAJH,CAIQ,GAJR,EAIarB,CAAC,IAAI;AAAC,eAAO,CAACA,CAAC,CAACC,SAAF,GAAc,CAAf,IAAoB0B,SAA3B;AAAqC,OAJxD,EAKGa,KALH,CAKS,MALT,EAKiBZ,UALjB,EAMGP,IANH,CAMQ,OANR,EAMiBI,QANjB,EAOGJ,IAPH,CAOQ,QAPR,EAOkBM,SAPlB,EAQGc,EARH,CAQM,WARN,EAQmBzC,CAAC,IAAI;AACpBuB,QAAAA,OAAO,CAACC,IAAR,CAAaU,eAAe,CAAClC,CAAC,CAAC0C,KAAH,CAAf,GAA2B,GAA3B,GAAiC1C,CAAC,CAAC2C,IAAnC,GAA0C,OAA1C,GACXtD,EAAE,CAACuD,MAAH,CAAU,KAAV,EAAiB/C,eAAe,GAAGG,CAAC,CAAC6C,QAArC,CADW,GACsC,aADtC,GACsD7C,CAAC,CAAC6C,QADxD,GACmE,QADhF,EAEGL,KAFH,CAES,MAFT,EAEiBnD,EAAE,CAACyD,KAAH,CAASC,KAAT,GAAiB,EAAjB,GAAsB,IAFvC,EAGGP,KAHH,CAGS,KAHT,EAGgBnD,EAAE,CAACyD,KAAH,CAASE,KAAT,GAAiB,EAAjB,GAAsB,IAHtC,EAIGR,KAJH,CAIS,SAJT,EAIoB,EAJpB;AAKD,OAdH,EAcKC,EAdL,CAcQ,UAdR,EAcoB,MAAM;AACtBlB,QAAAA,OAAO,CAACiB,KAAR,CAAc,SAAd,EAAyB,CAAzB,EACGA,KADH,CACS,MADT,EACiB,KADjB;AAED,OAjBH,EA7DyB,CAgFzB;;AACArB,MAAAA,KAAK,CAACG,MAAN,CAAa,GAAb,EACGD,IADH,CACQ,WADR,EACoB,iBAAiBb,MAAjB,GAA0B,GAD9C,EAEGyC,IAFH,CAEQ5D,EAAE,CAAC6D,UAAH,CAAchC,MAAd,EAAsBiC,UAAtB,CAAiC9D,EAAE,CAACuD,MAAH,CAAU,IAAV,CAAjC,CAFR,EAjFyB,CAqFzB;;AACAzB,MAAAA,KAAK,CAACG,MAAN,CAAa,GAAb,EACGD,IADH,CACQ,WADR,EACoB,kBAAkBM,SAAS,GAAG,CAA9B,GAAkC,GADtD,EAEGsB,IAFH,CAEQ5D,EAAE,CAAC+D,QAAH,CAAYtC,MAAZ,EAAoBqC,UAApB,CAA+BjB,eAA/B,CAFR,EAGGb,IAHH,CAGQ,OAHR,EAGgB,OAHhB,EAtFyB,CA2FzB;;AACAF,MAAAA,KAAK,CAACG,MAAN,CAAa,MAAb,EACGD,IADH,CACQ,WADR,EACoB,mBAAoBb,MAAM,GAAG,CAA7B,GAAmC,eADvD,EAEGgC,KAFH,CAES,aAFT,EAEuB,QAFvB,EAGGa,IAHH,CAGQ,OAHR,EA5FyB,CAiGzB;;AACAlC,MAAAA,KAAK,CAACG,MAAN,CAAa,MAAb,EACGD,IADH,CACQ,WADR,EACoB,eAAgBd,KAAK,GAAG,CAAxB,GAA6B,GAA7B,IAAoCC,MAAM,GAAG,EAA7C,IAAmD,GADvE,EAEGgC,KAFH,CAES,aAFT,EAEuB,QAFvB,EAGGa,IAHH,CAGQ,MAHR,EAlGyB,CAuGzB;;AACAlC,MAAAA,KAAK,CAACG,MAAN,CAAa,GAAb,EACGe,SADH,CACa,GADb,EAEGzC,IAFH,CAEQU,UAFR,EAEoBgC,KAFpB,GAGGhB,MAHH,CAGU,MAHV,EAIGD,IAJH,CAIQ,OAJR,EAIiB,EAJjB,EAKGA,IALH,CAKQ,QALR,EAKkB,EALlB,EAMGA,IANH,CAMQ,GANR,EAMa,CAACrB,CAAD,EAAI6B,CAAJ,KAAU;AAAE,eAAOA,CAAC,GAAG,EAAJ,GAAStB,KAAK,GAAG,EAAxB;AAA4B,OANrD,EAOGc,IAPH,CAOQ,GAPR,EAOab,MAAM,GAAGC,OAAO,CAACC,GAP9B,EAQG8B,KARH,CAQS,MART,EAQiBxC,CAAC,IAAI;AAAC,eAAOA,CAAC,CAACiC,KAAT;AAAiB,OARxC,EAxGyB,CAkHzB;;AACAd,MAAAA,KAAK,CAACG,MAAN,CAAa,GAAb,EACGe,SADH,CACa,MADb,EAEGzC,IAFH,CAEQU,UAFR,EAEoBgC,KAFpB,GAE4BhB,MAF5B,CAEmC,MAFnC,EAGGD,IAHH,CAGQ,GAHR,EAGa,CAACrB,CAAD,EAAG6B,CAAH,KAAS;AAAC,eAAOA,CAAC,GAAG,EAAJ,GAAStB,KAAK,GAAG,EAAxB;AAA2B,OAHlD,EAIGc,IAJH,CAIQ,GAJR,EAIab,MAAM,GAAGC,OAAO,CAACC,GAAR,GAAc,CAJpC,EAKG2C,IALH,CAKQrD,CAAC,IAAI;AAAC,eAAOA,CAAC,CAACgC,QAAT;AAAoB,OALlC;AAOD,KA1HD;AA2HD,GA7HQ,EA6HN,EA7HM,CAAT;AA+HA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF;AAKD,CAtID;;AAwIA,MAAMsB,GAAG,GAAG,MAAM;AAChB,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAND;;AAQA,eAAeA,GAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport axios from 'axios';\n\nconst Heatmap = () => {\n\n  useEffect(() => {\n    const url = 'http://localhost:3010';\n    axios.get(url).then(res => {\n      const data = res.data,\n            baseTemperature = 153384000,\n            timeRange = d3.extent(data, d => d.createdAt),\n            step = res.data.step;\n\n      const mappedData = data.map((fq) => {\n        \n      });\n\n      const legendData = [\n        {'interval': -127, 'color': 'purple'},\n        {'interval': -65, 'color': 'darkorchid'},\n        {'interval': 0, 'color': 'mediumpurple'},\n        {'interval': 65, 'color': 'lightskyblue'},\n        {'interval': 127, 'color': 'khaki'}\n      ];\n      \n      const width = 917,\n            height = 408,\n            margins = {top:20, right: 50, bottom: 100, left: 100};\n      \n      const yScale = d3.scaleLinear()\n        .range([height,0])\n        .domain([12,0]);\n      \n      const xScale = d3.scaleLinear()\n        .range([0,width])\n        .domain(d3.extent(data, d => {return d.createdAt; }));\n      \n      //Setting chart width and adjusting for margins\n      const chart = d3.select('.chart')\n        .attr('width', width + margins.right + margins.left)\n        .attr('height', height + margins.top + margins.bottom)\n        .append('g')\n        .attr('transform','translate(' + margins.left + ',' + margins.top + ')');\n      \n      const tooltip = d3.select('.container').append('div')\n        .attr('class','tooltip')\n        .html('Tooltip')\n      \n      const barWidth = width / (yearRange[1] - yearRange[0]),\n            barHeight = height / 12;\n      \n      //Return dynamic color based on intervals in legendData\n      const colorScale = d => {\n        for (let i = 0; i < legendData.length; i++) {\n          if (d.db + baseTemperature < legendData[i].interval) {\n            return legendData[i].color;\n          }\n        }\n        return 'darkred';\n      };\n      \n      //Return abbreviate month string from month decimal\n      const timeParseFormat = d => {\n        if (d === 0) return '';\n        return d3.timeFormat('%b')(d3.timeParse('%m')(d));\n      };\n      \n      //Append heatmap bars, styles, and mouse events\n      chart.selectAll('g')\n        .data(data).enter().append('g')\n        .append('rect')\n        .attr('x', d => {return (d.freq - timeRange[0]) * barWidth})\n        .attr('y', d => {return (d.createdAt - 1) * barHeight})\n        .style('fill', colorScale)\n        .attr('width', barWidth)\n        .attr('height', barHeight)\n        .on('mouseover', d => {\n          tooltip.html(timeParseFormat(d.month) + ' ' + d.year + '<br/>' +\n            d3.format('.4r')(baseTemperature + d.variance) + ' &degC<br/>' + d.variance + ' &degC' )\n            .style('left', d3.event.pageX - 35 + 'px')\n            .style('top', d3.event.pageY - 73 + 'px')\n            .style('opacity', .9);\n        }).on('mouseout', () => {\n          tooltip.style('opacity', 0)\n            .style('left', '0px');\n        });\n      \n      //Append x axis\n      chart.append('g')\n        .attr('transform','translate(0,' + height + ')')\n        .call(d3.axisBottom(xScale).tickFormat(d3.format('.4')));\n      \n      //Append y axis\n      chart.append('g')\n        .attr('transform','translate(0,-' + barHeight / 2 + ')')\n        .call(d3.axisLeft(yScale).tickFormat(timeParseFormat))\n        .attr('class','yAxis');\n      \n      //Append y axis label\n      chart.append('text')\n        .attr('transform','translate(-40,' + (height / 2)  + ') rotate(-90)')\n        .style('text-anchor','middle')\n        .text('Month');\n      \n      //Append x axis label\n      chart.append('text')\n        .attr('transform','translate(' + (width / 2) + ',' + (height + 40) + ')')\n        .style('text-anchor','middle')\n        .text('Year');\n      \n      //Append color legend using legendData\n      chart.append('g')\n        .selectAll('g')\n        .data(legendData).enter()\n        .append('rect')\n        .attr('width', 30)\n        .attr('height', 20)\n        .attr('x', (d, i) => { return i * 30 + width * .7;})\n        .attr('y', height + margins.top)\n        .style('fill', d => {return d.color; });\n      \n      //Append text labels for legend from legendData\n      chart.append('g')\n        .selectAll('text')\n        .data(legendData).enter().append('text')\n        .attr('x', (d,i) => {return i * 30 + width * .7})\n        .attr('y', height + margins.top * 3)\n        .text(d => {return d.interval; });\n        \n    });\n  }, []);\n\n  return (\n    <Fragment>\n      <h1>Heatmap</h1>\n    </Fragment>\n  );\n};\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Heatmap />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}