{"ast":null,"code":"import _slicedToArray from \"/home/n3op2/sdrf/SDRF-Monitoring/sdrf_client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/n3op2/sdrf/SDRF-Monitoring/sdrf_client/src/App.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport axios from 'axios';\nconst url = 'http://localhost:3010';\nconst reader = new FileReader();\nconst wsClient = new WebSocket('ws://localhost:8080');\n\nconst onConnection = () => {\n  console.log('websocket: connected');\n};\n\nwsClient.onopen = () => onConnection();\n\nwsClient.onclose = e => console.log('closing ws connection... ', e);\n\nlet printN = 0; // D3 stuff \n\nconst margin = {\n  top: 100,\n  right: 50,\n  bottom: 100,\n  left: 50\n};\nconst width = 9450 - margin.left - margin.right;\nconst height = 2250 - margin.top - margin.bottom;\nconst colorScale = d3.scaleLinear().range(['blue', 'yellow', 'red']).domain([-127, 0, 127]);\nlet svg;\n\nconst Heatmap = () => {\n  // TODO merge/review containers...\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        samples = _useState2[0],\n        setSamples = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        d3data = _useState4[0],\n        setd3data = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        decoding = _useState6[0],\n        setDecoding = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        yDomain = _useState8[0],\n        setYDomain = _useState8[1];\n\n  const _useState9 = useState({\n    yDomain: [],\n    samples: [],\n    visData: []\n  }),\n        _useState10 = _slicedToArray(_useState9, 2),\n        D3Data = _useState10[0],\n        setD3Data = _useState10[1]; // Testing\n\n\n  const _useState11 = useState(null),\n        _useState12 = _slicedToArray(_useState11, 2),\n        xScale = _useState12[0],\n        setX = _useState12[1];\n\n  const _useState13 = useState(null),\n        _useState14 = _slicedToArray(_useState13, 2),\n        yScale = _useState14[0],\n        setY = _useState14[1];\n\n  const setupD3 = id => {};\n\n  const freqsMapper = (data, hzLow, hzHigh, createdAt) => {\n    const step = (hzHigh - hzLow) / data.freqs.length;\n    let hz = parseInt(hzLow, 10);\n    const tmpArray = [];\n    const mappedData = data.freqs.map(db => {\n      const tmpObj = {};\n      tmpObj.createdAt = createdAt;\n      tmpObj.db = db;\n      tmpObj.hz = hz;\n      hz = Math.round(hz + step);\n      tmpArray.push(tmpObj);\n      return tmpObj;\n    });\n    const dataObj = {\n      samples: mappedData,\n      d3data: tmpArray\n    };\n    return dataObj;\n  }; // FileReader 'onload' event\n\n\n  reader.onload = ((s, d3, y) => {\n    return e => {\n      const data = JSON.parse(e.target.result);\n\n      if (data) {\n        const hzLow = data.hzLow,\n              hzHigh = data.hzHigh,\n              createdAt = data.createdAt;\n        const newLine = freqsMapper(data, hzLow, hzHigh, createdAt);\n        let tmpArr = [...d3];\n        tmpArr.splice(tmpArr.length - 257, tmpArr.length);\n        tmpArr = [...newLine.d3data, ...tmpArr];\n        let smp = [...D3Data.samples];\n        smp.unshift(newLine.samples);\n        smp.pop();\n        const removed = y.splice(y.length - 1, y.length);\n        setD3Data({\n          samples: smp,\n          visData: tmpArr,\n          yDomain: [newLine.d3data[0].createdAt, ...y]\n        });\n        console.log('complete');\n      }\n    };\n  })(D3Data.samples, D3Data.visData, D3Data.yDomain);\n\n  wsClient.onmessage = msg => handleMessage(msg); //Prepare d3\n\n\n  const prepareD3 = (data, d3VisData) => {\n    //d3.select('.chart').selectAll('svg').remove();\n    svg = d3.select('.chart').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // X d3 scale\n\n    const x = d3.scaleBand().range([0, width]).domain(data[0].map(d => {\n      return d.hz;\n    })).padding(0.01); // Y d3 scale\n\n    const y = d3.scaleBand().range([height, 0]).domain(data.map(el => el.map(item => item.createdAt).filter((v, i, a) => a.indexOf(v) === i)[0])).padding(0.01);\n    setD3Data({\n      samples: data,\n      visData: d3VisData,\n      yDomain: data.map(el => el.map(item => item.createdAt).filter((v, i, a) => a.indexOf(v) === i)[0])\n    });\n    svg.append('g').attr('transform', 'translate(0,' + height + ')').call(d3.axisBottom(x)).attr('class', 'xAxis');\n    svg.append(\"g\").call(d3.axisLeft(y)).attr('class', 'yAxis');\n    setX(() => x);\n    setY(() => y);\n  }; // Pull data from the server and store it in the state\n\n\n  const getData = async () => {\n    const res = await axios.get(url);\n    const data = res.data;\n    const baseHz = res.data[0].hzLow;\n    const topHz = res.data[0].hzHigh;\n    const step = (topHz - baseHz) / res.data[0].freqs.length;\n    console.log('First Response: ', res);\n    let hz = baseHz; // TODO investigate why?\n\n    const dataVis = []; // TODO setSamples(map...)\n\n    const mappedData = data.map((el, i) => {\n      hz = baseHz; //return freqsMapper(el, baseHz, topHz, el.createdAt); \n\n      return el.freqs.map(db => {\n        const tmp = {};\n        tmp.createdAt = el.createdAt;\n        tmp.db = db;\n        tmp.hz = hz;\n        hz = Math.round(hz + step);\n        dataVis.push(tmp);\n        return tmp;\n      });\n    });\n    console.log('vis data: ', dataVis);\n    console.log('samples row: ', mappedData); // update state\n\n    setD3Data({\n      samples: mappedData,\n      visData: dataVis\n    });\n    prepareD3(mappedData, dataVis);\n    await new Promise(r => setTimeout(r, 3000)); // TODO remove when done testing...\n\n    return new Promise(resolve => {\n      if (mappedData) return resolve(mappedData);\n      resolve('mappedData -> undefined');\n    });\n  };\n\n  useEffect(() => {\n    console.log('onMount init();');\n\n    wsClient.onmessage = msg => handleMessage(msg);\n\n    if (samples.length < 1) getData();\n    return () => {\n      console.log('unmounting...');\n    };\n  }, ['decoding']); // websocket message handler\n\n  const handleMessage = msg => {\n    console.log('READER STATE: ', reader.readyState);\n\n    if (reader.readyState !== 1) {\n      console.log('decoding started');\n      reader.readAsText(msg.data);\n    } else if (reader.readyState === 2 || reader.readyState === 0) {\n      setDecoding(false);\n    }\n  };\n\n  if (D3Data.samples.length > 0 && !decoding && xScale && yScale && reader.readyState !== 1) {\n    console.log(\"rendering data = [\".concat(printN, \"]\"));\n    svg = d3.select('.chart'); // Y d3 scale\n\n    yScale.domain(D3Data.yDomain);\n    let rects = svg.select('g').selectAll('rect').remove().exit().data(D3Data.visData);\n    rects.enter().append('rect').attr('x', d => {\n      return xScale(d.hz);\n    }).attr('y', d => {\n      return yScale(d.createdAt);\n    }).attr(\"width\", xScale.bandwidth()).attr(\"height\", yScale.bandwidth()).style(\"fill\", function (d) {\n      return colorScale(d.db);\n    });\n    printN++;\n  }\n\n  const testButtonHandler = () => {\n    console.log('re-render()');\n  }; // Testing... to remove\n\n\n  const renderHeatmap = () => {};\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, renderHeatmap(), React.createElement(\"button\", {\n    onClick: testButtonHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, \"test\"));\n};\n\nconst Main = () => {\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        close = _useState16[0],\n        setClose = _useState16[1];\n\n  const handleClose = e => {\n    setClose(close ? false : true);\n    console.log('closing connection');\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, \"close\"), React.createElement(\"svg\", {\n    className: \"chart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }), close ? null : React.createElement(Heatmap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }));\n};\n\nconst App = () => {\n  return React.createElement(\"div\", {\n    style: {\n      height: '100%'\n    },\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, React.createElement(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/n3op2/sdrf/SDRF-Monitoring/sdrf_client/src/App.js"],"names":["React","Fragment","useEffect","useState","d3","axios","url","reader","FileReader","wsClient","WebSocket","onConnection","console","log","onopen","onclose","e","printN","margin","top","right","bottom","left","width","height","colorScale","scaleLinear","range","domain","svg","Heatmap","samples","setSamples","d3data","setd3data","decoding","setDecoding","yDomain","setYDomain","visData","D3Data","setD3Data","xScale","setX","yScale","setY","setupD3","id","freqsMapper","data","hzLow","hzHigh","createdAt","step","freqs","length","hz","parseInt","tmpArray","mappedData","map","db","tmpObj","Math","round","push","dataObj","onload","s","y","JSON","parse","target","result","newLine","tmpArr","splice","smp","unshift","pop","removed","onmessage","msg","handleMessage","prepareD3","d3VisData","select","attr","append","x","scaleBand","d","padding","el","item","filter","v","i","a","indexOf","call","axisBottom","axisLeft","getData","res","get","baseHz","topHz","dataVis","tmp","Promise","r","setTimeout","resolve","readyState","readAsText","rects","selectAll","remove","exit","enter","bandwidth","style","testButtonHandler","renderHeatmap","Main","close","setClose","handleClose","App"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport axios from 'axios';\n\nconst url = 'http://localhost:3010';\nconst reader = new FileReader();\nconst wsClient = new WebSocket('ws://localhost:8080');\nconst onConnection = () => {\n  console.log('websocket: connected');\n};\n\nwsClient.onopen = () => onConnection(); \nwsClient.onclose = (e) => console.log('closing ws connection... ', e);\n\nlet printN = 0;\n\n// D3 stuff \nconst margin = {top: 100, right: 50, bottom: 100, left: 50};\nconst width = 9450 - margin.left - margin.right;\nconst height = 2250 - margin.top - margin.bottom;\n\nconst colorScale = d3.scaleLinear()\n  .range(['blue', 'yellow', 'red'])\n  .domain([-127, 0, 127]);\nlet svg;\n\nconst Heatmap = () => {\n  // TODO merge/review containers...\n  const [samples, setSamples] = useState([]);\n  const [d3data, setd3data] = useState([]);\n  const [decoding, setDecoding] = useState(false);\n  const [yDomain, setYDomain] = useState([]);\n\n  const [D3Data, setD3Data] = useState({\n    yDomain: [],\n    samples: [],\n    visData: []\n  });\n\n  // Testing\n  const [xScale, setX] = useState(null);\n  const [yScale, setY] = useState(null);\n\n  const setupD3 = (id) => {\n  };\n\n  const freqsMapper = (data, hzLow, hzHigh, createdAt) => {\n    const step = (hzHigh - hzLow) / data.freqs.length;\n    let hz = parseInt(hzLow, 10);\n    const tmpArray = [];\n\n    const mappedData = data.freqs.map((db) => {\n      const tmpObj = {};\n      tmpObj.createdAt = createdAt;\n      tmpObj.db = db;      \n      tmpObj.hz = hz;\n      hz = Math.round(hz + step);\n      tmpArray.push(tmpObj);\n      return tmpObj;\n    });\n\n\n    \n    const dataObj = {\n      samples: mappedData,\n      d3data: tmpArray\n    }\n\n    return dataObj;\n  };\n\n  // FileReader 'onload' event\n  reader.onload = ((s, d3, y) => {\n    return (e) => {\n      const data = JSON.parse(e.target.result);\n    \n      if (data) {\n        const { hzLow, hzHigh, createdAt } = data\n        const newLine = freqsMapper(data, hzLow, hzHigh, createdAt);\n        let tmpArr = [...d3];\n        tmpArr.splice(tmpArr.length - 257, tmpArr.length);\n        tmpArr = [...newLine.d3data, ...tmpArr];\n\n        let smp = [...D3Data.samples];\n        smp.unshift(newLine.samples)\n        smp.pop();\n\n        const removed = y.splice(y.length - 1, y.length); \n\n        setD3Data({\n          samples: smp,\n          visData: tmpArr,\n          yDomain: [newLine.d3data[0].createdAt, ...y]\n        });\n\n        console.log('complete')\n      }\n    }\n  })(D3Data.samples, D3Data.visData, D3Data.yDomain);\n\n  wsClient.onmessage = (msg) => handleMessage(msg);\n  //Prepare d3\n  const prepareD3 = (data, d3VisData) => {\n    //d3.select('.chart').selectAll('svg').remove();\n    svg = d3.select('.chart')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .append('g')\n      .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n    // X d3 scale\n    const x = d3.scaleBand()\n      .range([0, width])\n      .domain(data[0].map(d => {\n        return d.hz;\n      }))\n      .padding(0.01);\n\n    // Y d3 scale\n    const y = d3.scaleBand()\n      .range([ height, 0 ])\n      .domain(data.map((el) => el.map((item) => item.createdAt)\n        .filter((v, i, a) => a.indexOf(v) === i)[0]))\n      .padding(0.01);\n    \n    setD3Data({ \n      samples: data,\n      visData: d3VisData,\n      yDomain: data.map((el) => el.map((item) => item.createdAt).filter((v, i, a) => a.indexOf(v) === i)[0])\n    });\n\n    svg.append('g')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(d3.axisBottom(x))\n      .attr('class','xAxis');\n\n    svg.append(\"g\")\n        .call(d3.axisLeft(y))\n        .attr('class','yAxis');\n\n    setX(() => x);\n    setY(() => y);\n  };\n\n  // Pull data from the server and store it in the state\n  const getData = async () => {\n    const res = await axios.get(url);\n    const data = res.data;\n    const baseHz = res.data[0].hzLow;\n    const topHz = res.data[0].hzHigh;\n    const step = (topHz - baseHz) / res.data[0].freqs.length;\n    console.log('First Response: ', res);\n    let hz = baseHz;\n    // TODO investigate why?\n    const dataVis = [];\n\n    // TODO setSamples(map...)\n    const mappedData = data.map((el, i) => {\n      hz = baseHz;\n      //return freqsMapper(el, baseHz, topHz, el.createdAt); \n      return el.freqs.map((db) => {\n        const tmp = {};\n        tmp.createdAt = el.createdAt;\n        tmp.db = db;\n        tmp.hz = hz;\n        hz = Math.round(hz + step);\n        dataVis.push(tmp);\n        return tmp;\n      });\n    });\n\n    console.log('vis data: ', dataVis);\n    console.log('samples row: ', mappedData);\n\n    // update state\n    setD3Data({\n      samples: mappedData,\n      visData: dataVis\n    });\n\n    prepareD3(mappedData, dataVis);\n  \n    await new Promise((r) => setTimeout(r, 3000));\n\n    // TODO remove when done testing...\n    return new Promise((resolve) => {\n      if (mappedData) return resolve(mappedData);\n      resolve('mappedData -> undefined')\n    });\n  };\n\n  useEffect(() => {\n    console.log('onMount init();');\n    wsClient.onmessage = (msg) => handleMessage(msg);\n\n    if (samples.length < 1) getData();\n\n    return () => {\n      console.log('unmounting...');\n    }\n  }, ['decoding']);\n\n  // websocket message handler\n  const handleMessage = (msg) => {\n    console.log('READER STATE: ', reader.readyState);\n    if (reader.readyState !== 1) {\n      console.log('decoding started')\n      reader.readAsText(msg.data);\n    } else if (reader.readyState === 2 || reader.readyState === 0) {\n      setDecoding(false);\n    }\n  };\n\n  if (D3Data.samples.length > 0 && !decoding && xScale && yScale && reader.readyState !== 1) {\n    console.log(`rendering data = [${printN}]`);\n\n    svg = d3.select('.chart');\n\n    // Y d3 scale\n    yScale.domain(D3Data.yDomain);\n\n    let rects = svg.select('g').selectAll('rect')\n      .remove()\n      .exit()\n      .data(D3Data.visData);\n\n    rects.enter()\n      .append('rect')\n      .attr('x', (d) => {\n        return xScale(d.hz);\n      })\n      .attr('y', (d) => {\n        return yScale(d.createdAt);\n      })\n      .attr(\"width\", xScale.bandwidth() )\n      .attr(\"height\", yScale.bandwidth() )\n      .style(\"fill\", function(d) { return colorScale(d.db)} )\n\n    printN++;\n  }\n  \n  const testButtonHandler = () => {\n    console.log('re-render()')\n  };\n\n  // Testing... to remove\n  const renderHeatmap = () => {\n  };\n\n  return (\n    <Fragment>\n      {renderHeatmap()}\n      <button onClick={testButtonHandler}>test</button>\n    </Fragment>\n  );\n};\n\nconst Main = () => {\n  const [close, setClose] = useState(false);\n\n  const handleClose = (e) => {\n    setClose(close ? false : true);\n    console.log('closing connection');\n  };\n\n  return (\n    <Fragment>\n      <button onClick={handleClose}>close</button>\n      <svg className='chart'></svg>\n      {close ? null : <Heatmap />} \n    </Fragment>\n  );\n}\n\nconst App = () => {\n  return (\n    <div style={{height: '100%'}} className=\"App\">\n      <Main />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}