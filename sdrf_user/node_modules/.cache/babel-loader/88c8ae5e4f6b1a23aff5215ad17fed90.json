{"ast":null,"code":"var _jsxFileName = \"/home/n3op2/node/sdrf_client/src/App.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport axios from 'axios';\n\nconst Heatmap = () => {\n  useEffect(() => {\n    const url = 'http://localhost:3010';\n    axios.get(url).then(res => {\n      console.log('fetching data...'); // TODO have a separate table for data values such as\n      // hzLow, hzHigh and link it with freqs id\n\n      if (res.data) {\n        // TODO tidy up\n        const data = res.data;\n        const baseHz = res.data[0].hzLow;\n        const topHz = res.data[0].hzHigh;\n        const baseTemperature = res.data[0].hzLow;\n        const timeRange = d3.extent(data, d => d.createdAt);\n        const step = (topHz - baseHz) / res.data[0].freqs.length;\n        let hz = baseHz;\n        const mappedData = data.map((el, i) => {\n          console.log('started');\n          hz = baseHz;\n          return el.freqs.map(db => {\n            const tmp = {};\n            tmp.db = db;\n            tmp.hz = hz;\n            hz = Math.round(hz + step);\n            return tmp;\n          });\n        });\n        console.log('mapped data: ', mappedData);\n        const hzRange = [baseHz, topHz];\n        console.log('range: ', hzRange);\n        const legendData = [{\n          'interval': -127,\n          'color': 'purple'\n        }, {\n          'interval': -65,\n          'color': 'darkorchid'\n        }, {\n          'interval': 0,\n          'color': 'mediumpurple'\n        }, {\n          'interval': 65,\n          'color': 'lightskyblue'\n        }, {\n          'interval': 127,\n          'color': 'khaki'\n        }];\n        const width = 917,\n              height = 408,\n              margins = {\n          top: 20,\n          right: 50,\n          bottom: 100,\n          left: 100\n        };\n        const yScale = d3.scaleLinear().range([height, 0]).domain([0, mappedData.length]);\n        const xScale = d3.scaleLinear().range([0, width]).domain(d3.extent(mappedData, d => {\n          return d.map(el => {\n            return el.hz;\n          });\n        })); //Setting chart width and adjusting for margins\n\n        const chart = d3.select('.chart').attr('width', width + margins.right + margins.left).attr('height', height + margins.top + margins.bottom).append('g').attr('transform', 'translate(' + margins.left + ',' + margins.top + ')');\n        const barWidth = width / (hzRange[1] - hzRange[0]),\n              barHeight = height / 12; //Return dynamic color based on intervals in legendData\n\n        const colorScale = d => {\n          for (let i = 0; i < legendData.length; i++) {\n            if (d.db + baseTemperature < legendData[i].interval) {\n              return legendData[i].color;\n            }\n          }\n\n          return 'darkred';\n        }; //Return abbreviate month string from month decimal\n\n\n        const timeParseFormat = d => {\n          if (d === 0) return '';\n          return d3.timeFormat('%b')(d3.timeParse('%m')(d));\n        };\n\n        let n = 0; //Append heatmap bars, styles, and mouse events\n\n        chart.selectAll('g').data(mappedData).enter().append('g').append('rect').attr('x', d => {\n          d.map(el => {\n            return parseInt((el.hz - hzRange[0]) * barWidth, 10);\n          });\n        }).attr('y', d => {\n          console.log(n * barHeight);\n          const yPos = (data.length - n) * barHeight;\n          n++;\n          return yPos;\n        }).style('fill', colorScale).attr('width', barWidth).attr('height', barHeight); //Append x axis\n\n        chart.append('g').attr('transform', 'translate(0,' + height + ')').call(d3.axisBottom(xScale).tickFormat(d3.format('.4'))); //Append y axis\n\n        chart.append('g').attr('transform', 'translate(0,-' + barHeight / 2 + ')').call(d3.axisLeft(yScale)).attr('class', 'yAxis'); //Append y axis label\n\n        chart.append('text').attr('transform', 'translate(-40,' + height / 2 + ') rotate(-90)').style('text-anchor', 'middle').text('Month'); //Append x axis label\n\n        chart.append('text').attr('transform', 'translate(' + width / 2 + ',' + (height + 40) + ')').style('text-anchor', 'middle').text('Year'); //Append color legend using legendData\n\n        chart.append('g').selectAll('g').data(legendData).enter().append('rect').attr('width', 30).attr('height', 20).attr('x', (d, i) => {\n          return i * 30 + width * .7;\n        }).attr('y', height + margins.top).style('fill', d => {\n          return d.color;\n        }); //Append text labels for legend from legendData\n\n        chart.append('g').selectAll('text').data(legendData).enter().append('text').attr('x', (d, i) => {\n          return i * 30 + width * .7;\n        }).attr('y', height + margins.top * 3).text(d => {\n          return d.interval;\n        });\n      } else {\n        console.log('empty response');\n      }\n    });\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Heatmap\"), React.createElement(\"svg\", {\n    className: \"chart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }));\n};\n\nconst App = () => {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(Heatmap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/n3op2/node/sdrf_client/src/App.js"],"names":["React","Fragment","useEffect","d3","axios","Heatmap","url","get","then","res","console","log","data","baseHz","hzLow","topHz","hzHigh","baseTemperature","timeRange","extent","d","createdAt","step","freqs","length","hz","mappedData","map","el","i","db","tmp","Math","round","hzRange","legendData","width","height","margins","top","right","bottom","left","yScale","scaleLinear","range","domain","xScale","chart","select","attr","append","barWidth","barHeight","colorScale","interval","color","timeParseFormat","timeFormat","timeParse","n","selectAll","enter","parseInt","yPos","style","call","axisBottom","tickFormat","format","axisLeft","text","App"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport axios from 'axios';\n\nconst Heatmap = () => {\n  useEffect(() => {\n    const url = 'http://localhost:3010';\n    axios.get(url).then(res => {\n      console.log('fetching data...');\n      // TODO have a separate table for data values such as\n      // hzLow, hzHigh and link it with freqs id\n      if (res.data) {\n        // TODO tidy up\n        const data = res.data;\n        const baseHz = res.data[0].hzLow;\n        const topHz = res.data[0].hzHigh;\n        const baseTemperature = res.data[0].hzLow;\n        const timeRange = d3.extent(data, d => d.createdAt);\n        const step = (topHz - baseHz) / res.data[0].freqs.length;\n        let hz = baseHz;\n\n        const mappedData = data.map((el, i) => {\n            console.log('started');\n            hz = baseHz;\n            return el.freqs.map((db) => {\n              const tmp = {};\n              tmp.db = db;\n              tmp.hz = hz;\n              hz = Math.round(hz + step);\n              return tmp;\n            });\n        });\n        console.log('mapped data: ', mappedData);\n\n        const hzRange = [baseHz, topHz]; \n\n        console.log('range: ', hzRange);\n\n        const legendData = [\n          {'interval': -127, 'color': 'purple'},\n          {'interval': -65, 'color': 'darkorchid'},\n          {'interval': 0, 'color': 'mediumpurple'},\n          {'interval': 65, 'color': 'lightskyblue'},\n          {'interval': 127, 'color': 'khaki'}\n        ];\n        \n        const width = 917,\n              height= 408,\n              margins = {top:20, right: 50, bottom: 100, left: 100};\n        \n        const yScale = d3.scaleLinear()\n          .range([height,0])\n          .domain([0 ,mappedData.length]);\n        \n        const xScale = d3.scaleLinear()\n          .range([0,width])\n          .domain(d3.extent(mappedData, d => {\n            return d.map((el) => {\n              return el.hz;\n            });\n          }));\n        \n        //Setting chart width and adjusting for margins\n        const chart = d3.select('.chart')\n          .attr('width', width + margins.right + margins.left)\n          .attr('height', height + margins.top + margins.bottom)\n          .append('g')\n          .attr('transform','translate(' + margins.left + ',' + margins.top + ')');\n        \n        const barWidth = width / (hzRange[1] - hzRange[0]),\n              barHeight = height / 12;\n        \n        //Return dynamic color based on intervals in legendData\n        const colorScale = d => {\n          for (let i = 0; i < legendData.length; i++) {\n            if (d.db + baseTemperature < legendData[i].interval) {\n              return legendData[i].color;\n            }\n          }\n          return 'darkred';\n        };\n        \n        //Return abbreviate month string from month decimal\n        const timeParseFormat = d => {\n          if (d === 0) return '';\n          return d3.timeFormat('%b')(d3.timeParse('%m')(d));\n        };\n        \n        let n = 0;\n\n        //Append heatmap bars, styles, and mouse events\n        chart.selectAll('g')\n          .data(mappedData).enter().append('g')\n          .append('rect')\n          .attr('x', d => {\n            d.map((el) => {\n              return parseInt((el.hz - hzRange[0]) * barWidth, 10);\n            });\n          })\n          .attr('y', d => {\n            console.log((n) * barHeight);\n            const yPos = (data.length - n) * barHeight\n            n++;\n            return yPos;\n          })\n          .style('fill', colorScale)\n          .attr('width', barWidth)\n          .attr('height', barHeight)\n        \n        //Append x axis\n        chart.append('g')\n          .attr('transform','translate(0,' + height + ')')\n          .call(d3.axisBottom(xScale).tickFormat(d3.format('.4')));\n        \n        //Append y axis\n        chart.append('g')\n          .attr('transform','translate(0,-' + barHeight / 2 + ')')\n          .call(d3.axisLeft(yScale))\n          .attr('class','yAxis');\n        \n        //Append y axis label\n        chart.append('text')\n          .attr('transform','translate(-40,' + (height / 2)  + ') rotate(-90)')\n          .style('text-anchor','middle')\n          .text('Month');\n        \n        //Append x axis label\n        chart.append('text')\n          .attr('transform','translate(' + (width / 2) + ',' + (height + 40) + ')')\n          .style('text-anchor','middle')\n          .text('Year');\n        \n        //Append color legend using legendData\n        chart.append('g')\n          .selectAll('g')\n          .data(legendData).enter()\n          .append('rect')\n          .attr('width', 30)\n          .attr('height', 20)\n          .attr('x', (d, i) => { return i * 30 + width * .7;})\n          .attr('y', height + margins.top)\n          .style('fill', d => {return d.color; });\n        \n        //Append text labels for legend from legendData\n        chart.append('g')\n          .selectAll('text')\n          .data(legendData).enter().append('text')\n          .attr('x', (d,i) => {return i * 30 + width * .7})\n          .attr('y', height + margins.top * 3)\n          .text(d => {return d.interval; });\n        \n      } else {\n        console.log('empty response');\n      }\n    });\n\n  }, []);\n\n  return (\n    <Fragment>\n      <h1>Heatmap</h1>\n      <svg className='chart'></svg>\n    </Fragment>\n  );\n};\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Heatmap />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}