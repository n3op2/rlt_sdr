{"ast":null,"code":"import _slicedToArray from \"/home/n3op2/node/sdrf_client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/n3op2/node/sdrf_client/src/App.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport axios from 'axios';\nconst url = 'http://localhost:3010';\n\nconst Heatmap = () => {\n  // TODO merge/review containers...\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        samples = _useState2[0],\n        setSamples = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        d3data = _useState4[0],\n        setD3Data = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        decodedFreqs = _useState6[0],\n        setDecodedFreqs = _useState6[1]; // Blob to string\n\n\n  const reader = new FileReader(); // D3 stuff \n\n  const margin = {\n    top: 100,\n    right: 50,\n    bottom: 100,\n    left: 50\n  };\n  const width = 9450 - margin.left - margin.right;\n  const height = 1250 - margin.top - margin.bottom;\n\n  const freqsMapper = (data, hzLow, hzHigh, createdAt) => {\n    const step = (hzHigh - hzLow) / data.freqs.length;\n    let hz = hzLow;\n    const tmpArray = [];\n    return data.freqs.map(db => {\n      const tmpObj = {};\n      tmpObj.createdAt = createdAt;\n      tmpObj.db = db;\n      tmpObj.hz = hz;\n      hz = Math.round(hz + step);\n      tmpArray.push(tmpObj);\n      return tmpObj;\n    });\n  }; // FileReader 'onload' event\n\n\n  reader.onload = () => {\n    setDecodedFreqs(JSON.parse(reader.result));\n  }; // Pull data from the server and store it in the state\n\n\n  const getData = async () => {\n    const res = await axios.get(url);\n    console.log('server response: ', res.data);\n    const data = res.data;\n    const baseHz = res.data[0].hzLow;\n    const topHz = res.data[0].hzHigh;\n    const step = (topHz - baseHz) / res.data[0].freqs.length;\n    let hz = baseHz;\n    const dataVis = []; // TODO setSamples(map...)\n\n    const mappedData = data.map((el, i) => {\n      hz = baseHz;\n      return el.freqs.map(db => {\n        const tmp = {};\n        tmp.createdAt = el.createdAt;\n        tmp.db = db;\n        tmp.hz = hz;\n        hz = Math.round(hz + step);\n        dataVis.push(tmp);\n        return tmp;\n      });\n    }); // update state\n\n    setD3Data([...dataVis]);\n    setSamples([...mappedData]);\n    await new Promise(r => setTimeout(r, 3000));\n    return null;\n  };\n\n  useEffect(() => {\n    const wsClient = new WebSocket('ws://localhost:8080');\n\n    wsClient.onopen = () => onConnection();\n\n    wsClient.onmessage = msg => handleMessage(msg);\n\n    wsClient.onclose = e => console.log('closing ws connection... ', e);\n\n    getData();\n    return () => {\n      console.log('unmounting...');\n    };\n  }, []); // websocket event handlers\n  // ===================================================================\n\n  const handleMessage = msg => {\n    console.log('msg received: ', msg.data);\n    reader.readAsText(msg.data);\n  };\n\n  const onConnection = () => {\n    console.log('websocket: connected');\n  };\n\n  console.log('From buffer: ', decodedFreqs);\n\n  if (samples.length > 0) {\n    if (decodedFreqs) {\n      //      const newSamples = samples.splice(0,1, g decodedFreqs);  \n      freqsMapper(decodedFreqs, decodedFreqs.hzLow, decodedFreqs.hzHigh, decodedFreqs.createdAt);\n      console.log('converted sample: ', decodedFreqs);\n    } // d3 stuff\n\n\n    const svg = d3.select('.chart').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // X d3 scale\n\n    const xScale = d3.scaleBand().range([0, width]).domain(samples[0].map(d => {\n      return d.hz;\n    })).padding(0.01);\n    svg.append('g').attr('transform', 'translate(0,' + height + ')').call(d3.axisBottom(xScale).ticks(30, 's')).attr('class', 'xAxis'); // Y d3 scale\n\n    const yScale = d3.scaleBand().range([height, 0]).domain(samples.map(el => el.map(item => item.createdAt).filter((v, i, a) => a.indexOf(v) === i)[0])).padding(0.01);\n    svg.append(\"g\").call(d3.axisLeft(yScale)).attr('class', 'yAxis');\n    svg.append('text').attr('transform', 'translate(' + width / 2 + ',' + (height + 40) + ')').style('text-anchor', 'middle').text('HZ');\n    const colorScale = d3.scaleLinear().range(['blue', 'yellow', 'red']).domain([-127, 0, 127]);\n    svg.selectAll('g.x text').attr('transform', 'translate(-10,10) rotate(315)');\n    svg.selectAll().data(d3data).enter().append(\"rect\").attr(\"x\", function (d) {\n      return xScale(d.hz);\n    }).attr(\"y\", function (d) {\n      return yScale(d.createdAt);\n    }).attr(\"width\", xScale.bandwidth()).attr(\"height\", yScale.bandwidth()).style(\"fill\", function (d) {\n      return colorScale(d.db);\n    });\n    svg.selectAll('g.x').attr('transform', 'translate(-10,10) rotate(315)');\n  }\n\n  ;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    className: \"chart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }));\n};\n\nconst Main = () => {\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        close = _useState8[0],\n        setClose = _useState8[1];\n\n  const handleClose = e => {\n    setClose(close ? false : true);\n    console.log('closing connection');\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"close\"), close ? null : React.createElement(Heatmap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }));\n};\n\nconst App = () => {\n  return React.createElement(\"div\", {\n    style: {\n      height: '100%'\n    },\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/n3op2/node/sdrf_client/src/App.js"],"names":["React","Fragment","useEffect","useState","d3","axios","url","Heatmap","samples","setSamples","d3data","setD3Data","decodedFreqs","setDecodedFreqs","reader","FileReader","margin","top","right","bottom","left","width","height","freqsMapper","data","hzLow","hzHigh","createdAt","step","freqs","length","hz","tmpArray","map","db","tmpObj","Math","round","push","onload","JSON","parse","result","getData","res","get","console","log","baseHz","topHz","dataVis","mappedData","el","i","tmp","Promise","r","setTimeout","wsClient","WebSocket","onopen","onConnection","onmessage","msg","handleMessage","onclose","e","readAsText","svg","select","attr","append","xScale","scaleBand","range","domain","d","padding","call","axisBottom","ticks","yScale","item","filter","v","a","indexOf","axisLeft","style","text","colorScale","scaleLinear","selectAll","enter","bandwidth","Main","close","setClose","handleClose","App"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport axios from 'axios';\n\nconst url = 'http://localhost:3010';\n\nconst Heatmap = () => {\n  // TODO merge/review containers...\n  const [samples, setSamples] = useState([]);\n  const [d3data, setD3Data] = useState([]);\n  const [decodedFreqs, setDecodedFreqs] = useState();\n\n  // Blob to string\n  const reader = new FileReader();\n\n  // D3 stuff \n  const margin = {top: 100, right: 50, bottom: 100, left: 50};\n  const width = 9450 - margin.left - margin.right;\n  const height = 1250 - margin.top - margin.bottom;\n\n  const freqsMapper = (data, hzLow, hzHigh, createdAt) => {\n    const step = (hzHigh - hzLow) / data.freqs.length;\n    let hz = hzLow;\n    const tmpArray = [];\n\n    return data.freqs.map((db) => {\n      const tmpObj = {};\n      tmpObj.createdAt = createdAt;\n      tmpObj.db = db;      \n      tmpObj.hz = hz;\n      hz = Math.round(hz + step);\n      tmpArray.push(tmpObj);\n      return tmpObj;\n    });\n  };\n\n  // FileReader 'onload' event\n  reader.onload = () => {\n    setDecodedFreqs(JSON.parse(reader.result));\n  }\n\n  // Pull data from the server and store it in the state\n  const getData = async () => {\n    const res = await axios.get(url);\n    console.log('server response: ', res.data);\n    const data = res.data;\n    const baseHz = res.data[0].hzLow;\n    const topHz = res.data[0].hzHigh;\n    const step = (topHz - baseHz) / res.data[0].freqs.length;\n    let hz = baseHz;\n    const dataVis = [];\n\n    // TODO setSamples(map...)\n    const mappedData = data.map((el, i) => {\n      hz = baseHz;\n      return el.freqs.map((db) => {\n        const tmp = {};\n        tmp.createdAt = el.createdAt;\n        tmp.db = db;\n        tmp.hz = hz;\n        hz = Math.round(hz + step);\n        dataVis.push(tmp);\n        return tmp;\n      });\n    });\n\n    // update state\n    setD3Data([...dataVis])\n    setSamples([...mappedData]);\n  \n    await new Promise((r) => setTimeout(r, 3000));\n    return null;\n  };\n\n  useEffect(() => {\n    const wsClient = new WebSocket('ws://localhost:8080');\n\n    wsClient.onopen = () => onConnection(); \n    wsClient.onmessage = (msg) => handleMessage(msg);\n    wsClient.onclose = (e) => console.log('closing ws connection... ', e);\n\n    getData();\n\n    return () => {\n      console.log('unmounting...');\n    }\n  }, []);\n\n  // websocket event handlers\n  // ===================================================================\n  const handleMessage = (msg) => {\n    console.log('msg received: ', msg.data);\n    reader.readAsText(msg.data);\n  };\n\n  const onConnection = () => {\n    console.log('websocket: connected');\n  };\n\n  console.log('From buffer: ', decodedFreqs); \n\n  if (samples.length > 0) {\n    if (decodedFreqs) {\n//      const newSamples = samples.splice(0,1, g decodedFreqs);  \n      freqsMapper(decodedFreqs,\n        decodedFreqs.hzLow,\n        decodedFreqs.hzHigh,\n        decodedFreqs.createdAt\n      );\n      console.log('converted sample: ', decodedFreqs);\n    }\n    // d3 stuff\n    const svg = d3.select('.chart')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .append('g')\n      .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n    // X d3 scale\n    const xScale = d3.scaleBand()\n      .range([0, width])\n      .domain(samples[0].map(d => {\n        return d.hz;\n      }))\n      .padding(0.01);\n\n    svg.append('g')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(d3.axisBottom(xScale)\n        .ticks(30, 's'))\n      .attr('class','xAxis');\n\n    // Y d3 scale\n    const yScale = d3.scaleBand()\n      .range([ height, 0 ])\n      .domain(samples.map((el) => el.map((item) => item.createdAt)\n        .filter((v, i, a) => a.indexOf(v) === i)[0]))\n      .padding(0.01);\n\n    svg.append(\"g\")\n      .call(d3.axisLeft(yScale))\n      .attr('class','yAxis');\n\n    svg.append('text')\n      .attr('transform','translate(' + (width / 2) + ',' + (height + 40) + ')')\n      .style('text-anchor','middle')\n      .text('HZ');\n\n    const colorScale = d3.scaleLinear()\n      .range(['blue', 'yellow', 'red'])\n      .domain([-127, 0, 127]);\n\n    svg.selectAll('g.x text')\n      .attr('transform', 'translate(-10,10) rotate(315)');\n\n    svg.selectAll()\n        .data(d3data)\n        .enter()\n        .append(\"rect\")\n        .attr(\"x\", function(d) {\n          return xScale(d.hz)\n        })\n        .attr(\"y\", function(d) {\n          return yScale(d.createdAt)\n        })\n        .attr(\"width\", xScale.bandwidth() )\n        .attr(\"height\", yScale.bandwidth() )\n        .style(\"fill\", function(d) { return colorScale(d.db)} )\n\n    svg.selectAll('g.x')\n      .attr('transform', 'translate(-10,10) rotate(315)');\n  };\n\n  return (\n    <Fragment>\n      <svg className='chart'></svg>\n    </Fragment>\n  );\n};\n\nconst Main = () => {\n  const [close, setClose] = useState(false);\n\n  const handleClose = (e) => {\n    setClose(close ? false : true);\n    console.log('closing connection');\n  };\n\n  return (\n    <Fragment>\n      <button onClick={handleClose}>close</button>\n      {close ? null : <Heatmap />} \n    </Fragment>\n  );\n}\n\nconst App = () => {\n  return (\n    <div style={{height: '100%'}} className=\"App\">\n      <Main />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}